/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contactproject;

import java.awt.Image;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author SOHAM
 */
public class ALLCONNTACTEDIT extends javax.swing.JFrame {
String userid;
Connection con;
String me;
    /**
     * Creates new form ALLCONNTACTEDIT
     */
    public ALLCONNTACTEDIT(String uid,String me) {
        this.me=me;
    try {
        initComponents();
        this.userid=uid;
        this.setVisible(true);
  
        jPanelALLCONTACTSEDIT.setVisible(true);
        allcontactphotoedit.setVisible(true);
        allcontactsaddedit.setVisible(true);
        allcontactsfullnameedit.setVisible(true);
        allcontactslocationedit.setVisible(true);
        allcontactsnameedit.setVisible(true);
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        Connection con=DriverManager.getConnection("jdbc:sqlserver://LAPTOP-OSE1P7NI:1433","sa","1234");
        
         ResultSet rs;
        Statement s=con.createStatement();
        s.execute("use PROFILECONTACT");
        rs=s.executeQuery("Select * from ALLCONTACTS where userid='"+userid+"'");
        if(rs.next())
        {
                byte[] img = rs.getBytes("photojpg");
                ImageIcon image = new ImageIcon(img);
                Image im =image.getImage();
                Image  myimg = im.getScaledInstance(allcontactphotoedit.getWidth(), allcontactphotoedit.getHeight(), Image.SCALE_SMOOTH);
                 
                ImageIcon newImage= new ImageIcon(myimg);
                allcontactphotoedit.setIcon(newImage);
                allcontactsnameedit.setText(userid);
                allcontactsfullnameedit.setText(rs.getString("fullname"));
                
                ResultSet rss=s.executeQuery("select userid from "+me+";");
                while(rss.next())
                {
                if(userid.equals(rss.getString("userid")))
                {
                allcontactsaddedit.setText("MY FRIEND");
                allcontactsaddedit.setEnabled(false);
                }    
                }
        
        }
        rs.close();
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(Level.SEVERE, null, ex);
    }
    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelALLCONTACTSEDIT = new javax.swing.JPanel();
        allcontactphotoedit = new javax.swing.JLabel();
        allcontactsaddedit = new javax.swing.JButton();
        allcontactslocationedit = new javax.swing.JButton();
        allcontactsnameedit = new javax.swing.JTextField();
        allcontactsfullnameedit = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelALLCONTACTSEDIT.setEnabled(false);

        allcontactphotoedit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                allcontactphotoeditMousePressed(evt);
            }
        });

        allcontactsaddedit.setText("ADD TO MY FRIENLIST ");
        allcontactsaddedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allcontactsaddeditActionPerformed(evt);
            }
        });

        allcontactslocationedit.setText("VIEW LOCATION");
        allcontactslocationedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allcontactslocationeditActionPerformed(evt);
            }
        });

        allcontactsnameedit.setEditable(false);

        allcontactsfullnameedit.setEditable(false);

        javax.swing.GroupLayout jPanelALLCONTACTSEDITLayout = new javax.swing.GroupLayout(jPanelALLCONTACTSEDIT);
        jPanelALLCONTACTSEDIT.setLayout(jPanelALLCONTACTSEDITLayout);
        jPanelALLCONTACTSEDITLayout.setHorizontalGroup(
            jPanelALLCONTACTSEDITLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelALLCONTACTSEDITLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(allcontactphotoedit, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelALLCONTACTSEDITLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelALLCONTACTSEDITLayout.createSequentialGroup()
                        .addGroup(jPanelALLCONTACTSEDITLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allcontactsnameedit)
                            .addComponent(allcontactsfullnameedit))
                        .addContainerGap())
                    .addGroup(jPanelALLCONTACTSEDITLayout.createSequentialGroup()
                        .addComponent(allcontactsaddedit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allcontactslocationedit, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanelALLCONTACTSEDITLayout.setVerticalGroup(
            jPanelALLCONTACTSEDITLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelALLCONTACTSEDITLayout.createSequentialGroup()
                .addComponent(allcontactsnameedit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(allcontactsfullnameedit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelALLCONTACTSEDITLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allcontactsaddedit)
                    .addComponent(allcontactslocationedit))
                .addContainerGap())
            .addComponent(allcontactphotoedit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelALLCONTACTSEDIT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelALLCONTACTSEDIT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void allcontactsaddeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allcontactsaddeditActionPerformed

    try {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
         Connection con=DriverManager.getConnection("jdbc:sqlserver://LAPTOP-OSE1P7NI:1433","sa","1234");
        Statement s=con.createStatement();
       if(me.equals(allcontactsnameedit.getText()))
       {
       JOptionPane.showMessageDialog(rootPane,"You cannot be friend with yourself");
       this.setVisible(false);
       }
       else
       {
        s.execute("use PROFILECONTACT");
        s.executeUpdate("Insert into "+me+"(userid) values ('"+allcontactsnameedit.getText()+"')");
        JOptionPane.showMessageDialog(rootPane, "FRIEND ADDED SUCCESSFULLY !!!");
        Contact frame4= new Contact(me);
        frame4.setVisible(true);
       }
    } catch (SQLException ex) {
        Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(Level.SEVERE, null, ex);
    }
   
    }//GEN-LAST:event_allcontactsaddeditActionPerformed

    private void allcontactphotoeditMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allcontactphotoeditMousePressed
      
    }//GEN-LAST:event_allcontactphotoeditMousePressed

    private void allcontactslocationeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allcontactslocationeditActionPerformed
    try {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
         Connection con=DriverManager.getConnection("jdbc:sqlserver://LAPTOP-OSE1P7NI:1433","sa","1234");
        ResultSet rs;
        Statement s=con.createStatement();
        s.execute("use PROFILECONTACT");
        rs=s.executeQuery("Select address from ALLCONTACTS where userid='"+userid+"'");
        if(rs.next())
        {
        String location=rs.getString("address");
        location=location.replace(" ","+");
        location=location.replace(",","+" );
        java.awt.Desktop.getDesktop().browse(java.net.URI.create("https://www.google.co.in/maps/place/"+location));
        }
        rs.close();
    } catch (SQLException ex) {
        Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_allcontactslocationeditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ALLCONNTACTEDIT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ALLCONNTACTEDIT("shirish@11","soham@97").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel allcontactphotoedit;
    private javax.swing.JButton allcontactsaddedit;
    private javax.swing.JTextField allcontactsfullnameedit;
    private javax.swing.JButton allcontactslocationedit;
    private javax.swing.JTextField allcontactsnameedit;
    private javax.swing.JPanel jPanelALLCONTACTSEDIT;
    // End of variables declaration//GEN-END:variables
}
